<style>
  /* Base styles */
  .nav-link {
    @apply text-gray-600 hover: text-gray-900 font-medium transition-colors duration-200;
  }

  .mobile-nav-link {
    @apply block py-2 text-gray-600 hover: text-gray-900 transition-colors duration-200;
  }

  .dropdown-item {
    @apply block px-4 py-2 text-sm text-gray-700 hover: bg-gray-50 transition-colors duration-200;
  }




  /* Animations */
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-slide-down {
    animation: slideDown 0.2s ease-out forwards;
  }

  /* Badge animations */
  .badge-pop {
    animation: badgePop 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  @keyframes badgePop {
    0% {
      transform: scale(0);
    }

    80% {
      transform: scale(1.2);
    }

    100% {
      transform: scale(1);
    }
  }

  /* Responsive padding for fixed header */
  body {
    padding-top: 4rem;
  }

  @media (min-width: 1024px) {
    body {
      padding-top: 5rem;
    }
  }

  /* Styles for the marquee */
  #announcement-marquee {
    display: flex;
    animation: marquee 30s linear infinite;
  }

  /* Individual items style */
  .marquee-item {
    white-space: nowrap;
  }

  /* Keyframes for sliding marquee effect */
  @keyframes marquee {
    from {
      transform: translateX(0);
    }

    to {
      transform: translateX(-100%);
    }
  }


  /* Mobile Header Styles */
  @media (max-width: 1024px) {
    body {
      padding-bottom: 4rem;
      /* Space for bottom navigation */
    }

    .mobile-search-active {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: white;
      z-index: 60;
    }

    /* Slide up animation for menu overlay */
    .menu-slide-up {
      transform: translateY(0) !important;
    }

    /* Badge animation */
    @keyframes badgePop {
      0% {
        transform: scale(0);
      }

      80% {
        transform: scale(1.2);
      }

      100% {
        transform: scale(1);
      }
    }

    .badge-pop {
      animation: badgePop 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
    }

    /* Smooth header hide/show on scroll */
    .header-hidden {
      transform: translateY(-100%);
    }
  }
</style>

<!-- Top Header for Mobile -->
<header class="fixed top-0 left-0 right-0 bg-white shadow-md z-50 transition-transform duration-300">
  <div class="container mx-auto px-4">
    <!-- Mobile Top Bar -->
    <div class="flex items-center justify-between py-4 lg:hidden">
      <!-- Logo -->
      <a href="/" class="text-2xl font-bold">Yadro</a>

      <!-- Search Bar -->
      <div class="flex-1 mx-4 relative">
        <input type="text" id="mobile-search" class="w-full px-4 py-2 rounded-full border border-gray-300 focus:border-blue-500 focus:ring-1 focus:ring-blue-200 text-sm" placeholder="Search products...">
        <button class="absolute right-3 top-1/2 -translate-y-1/2">
          <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </button>
        <!-- Mobile Search Results -->
        <div id="mobile-search-results" class="hidden absolute top-full left-0 right-0 bg-white mt-2 rounded-md shadow-lg max-h-96 overflow-y-auto z-50">
        </div>
      </div>
    </div>
  </div>
</header>


<!-- Bottom Navigation Bar for Mobile -->
<nav class="fixed bottom-0 left-0 right-0 bg-white shadow-lg lg:hidden z-50">
  <div class="flex justify-around items-center py-2">
    <a href="/home" class="flex flex-col items-center p-2 text-gray-600 hover:text-blue-500">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
      </svg>
      <span class="text-xs mt-1">Home</span>
    </a>

    <a href="/products" class="flex flex-col items-center p-2 text-gray-600 hover:text-blue-500">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
      </svg>
      <span class="text-xs mt-1">Products</span>
    </a>
    <a id="wishlist-button" href="/wishlist" class="flex flex-col items-center p-2 text-gray-600 hover:text-blue-500 relative">
      <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
      </svg>
      <span class="text-xs mt-1">Wishlist</span>
      <span id="wishlist-count-badge" class="absolute top-1 right-1 bg-red-500 text-white text-xs font-bold w-5 h-5 rounded-full flex items-center justify-center transform scale-0 transition-transform duration-200">0</span>
    </a>

    <a href="/cart" class="flex flex-col items-center p-2 text-gray-600 hover:text-blue-500 relative">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
      </svg>
      <span class="text-xs mt-1">Cart</span>
      <span id="mobile-cart-badge" class="absolute top-1 right-1 bg-red-500 text-white text-xs font-bold w-5 h-5 rounded-full flex items-center justify-center transform scale-0 transition-transform duration-200">0</span>
    </a>

    <button id="mobile-menu-btn" class="flex flex-col items-center p-2 text-gray-600 hover:text-blue-500">
      <div class="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center">
        <span class="text-sm font-medium text-gray-600"><%= user.fname[0] %></span>
      </div>
      <span class="text-xs mt-1">Menu</span>
    </button>
  </div>
</nav>

<!-- Mobile Menu Overlay -->
<div id="mobile-menu-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden transition-opacity duration-300">
  <div class="fixed bottom-0 left-0 right-0 bg-white rounded-t-3xl transform transition-transform duration-300 translate-y-full">
    <div class="flex justify-between items-center p-4 border-b">
      <h2 class="text-lg font-semibold">Menu</h2>
      <button id="close-menu-btn" class="p-2 hover:bg-gray-100 rounded-full">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    <div class="p-4 overflow-y-auto max-h-[70vh]">
      <nav class="space-y-4">
        <a href="/account" class="block p-4 rounded-lg bg-gray-50 hover:bg-red-50 hover:text-red-600 transition-colors flex items-center">
          <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
          </svg>
          Profile
        </a>
        <a href="/orders" class="block p-4 rounded-lg bg-gray-50 hover:bg-red-50 hover:text-red-600 transition-colors flex items-center">
          <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
          My Orders
        </a>
        <div class="space-y-2">
          <button id="mobile-categories-btn" class="w-full p-4 rounded-lg bg-gray-50 hover:bg-red-50 hover:text-red-600 transition-colors flex justify-between items-center">
            <div class="flex items-center">
              <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
              Categories
            </div>
            <svg class="w-4 h-4 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
          <div id="mobile-categories-content" class="hidden pl-4 space-y-2">
            <% categories.forEach(category => { %>
            <a href="/products/category/<%= category._id %>" class="block p-3 rounded-lg hover:bg-red-50 hover:text-red-600 transition-colors flex items-center">
              <%= category.name %>
            </a>
            <% }) %>
          </div>
        </div>
        <a href="/contact" class="block p-4 rounded-lg bg-gray-50 hover:bg-red-50 hover:text-red-600 transition-colors flex items-center">
          <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
          </svg>
          Contact
        </a>
    </div>
  </div>
</div>

<header class="bg-white shadow-md fixed w-full top-0 z-50	">
  <div class="container mx-auto px-4">
    <!-- Top bar with announcement marquee -->
    <div class="hidden lg:flex justify-center py-2 bg-gray-50 text-sm text-gray-600 relative overflow-hidden h-8">
      <div id="announcement-marquee" class="whitespace-nowrap flex">
        <% announcements.forEach((announcement, index) => { %>
        <p class="marquee-item px-12 inline-block">
          <%= announcement.content %>
        </p>
        <% }) %>
        <% announcements.forEach((announcement, index) => { %>
        <!-- Repeat items for seamless loop -->
        <p class="marquee-item px-12 inline-block">
          <%= announcement.content %>
        </p>
        <% }) %>
      </div>
    </div>
    <!-- Main header content -->
    <div id="main-header" class="py-6 flex justify-between md:w-full">
      <a id="yadro-logo" href="/" class="text-4xl mr-8 font-bold">Yadro</a>
      <nav class="hidden lg:block">
        <ul class="flex space-x-6">
          <li><a href="/home" class="hidden lg:block hover:text-gray-900">Home</a></li>
          <li><a href="/contact" class=" hidden lg:block text-gray-600 hover:text-gray-900">Contact</a></li>
          <li><a href="/products" class="hidden lg:block text-gray-600 hover:text-gray-900">Products</a></li>
          <li class="relative">
            <button id="categoryDropdownButton" class=" hidden lg:block text-gray-600 hover:text-gray-900 flex items-center">
              Categories
              <i class="fas fa-chevron-down ml-1 text-xs arrow"></i>
            </button>
            <div id="categoryDropdown" class="dropdown hidden absolute left-0 mt-2 w-48 bg-white rounded-md overflow-hidden shadow-xl z-10">
              <% categories.forEach( category => { %>
              <a href="/products/category/<%=  category._id %>" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"><%= category.name %></a>
              <%  }) %>
            </div>
          </li>
        </ul>
      </nav>




      <!-- Search Bar -->
      <div id="search-bar" class="relative hidden lg:block">
        <input type="text" style="width: 337px;" id="search-input" placeholder="Search products..." class="w-full px-4 py-2 rounded-full border border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200">
        <button id="search-button-logo" class=" absolute right-3 top-1/2 -translate-y-1/2">
          <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </button>
        <!-- Search Results Dropdown -->
        <div id="search-results" class="hidden absolute top-full left-0 right-0 bg-white mt-2 rounded-md shadow-lg max-h-96 overflow-y-auto z-50"></div>
      </div>
      <!-- Right Actions -->
      <div class="flex items-center">


        <a href="javascript:void(0);" onclick="toggleSearchBar()" class="lg:hidden mr-4 bg-gray-100 relative p-2 hover:bg-gray-100 rounded-full transition-colors duration-200">
          <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35m2.12-6.83a7.5 7.5 0 11-15 0 7.5 7.5 0 0115 0z"></path>
          </svg>
        </a>


        <!-- Wishlist -->
        <a id="wishlist-button" href="/wishlist" class="hidden lg:block relative p-2 hover:bg-gray-100 rounded-full transition-colors duration-200">
          <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
          </svg>
          <span id="wishlist-count-badge" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold w-5 h-5 rounded-full flex items-center justify-center transform scale-0 transition-transform duration-200">0</span>
        </a>

        <!-- Cart -->
        <a href="/cart" class="hidden lg:block relative p-2 hover:bg-gray-100 rounded-full transition-colors duration-200">
          <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
          <span id="cart-badge" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold w-5 h-5 rounded-full flex items-center justify-center transform scale-0 transition-transform duration-200">0</span>
        </a>

        <!-- User Menu -->
        <div class="hidden lg:block relative">
          <button id="userDropdownButton" class="flex items-center space-x-2 p-2 hover:bg-gray-100 rounded-full transition-colors duration-200">
            <div class="hidden lg:block w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center">
              <span class=" text-sm font-medium text-gray-600"><%= user.fname[0] %></span>
            </div>
            <span class="hidden lg:block text-sm font-medium text-gray-700"><%= user.fname %> <%= user.lname %></span>
          </button>
          <div id="userDropdown" class="hidden flex flex-col absolute p-4 right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50">
            <a href="/account" class="dropdown-item px-4 py-2 hover:bg-gray-100 rounded-full">Profile</a>
            <a href="/wallet" class="dropdown-item px-4 py-2 hover:bg-gray-100 rounded-full">Wallet</a>
            <a href="/orders" class="dropdown-item px-4 py-2 hover:bg-gray-100 rounded-full">My Orders</a>
            <div class="border-t border-gray-100 my-1"></div>
            <a href="/logout" class="dropdown-item px-4 py-2 text-red-600 hover:bg-red-50 rounded-full">Log out</a>
          </div>
        </div>
      </div>
    </div>
  </div>


</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu functionality
    const menuBtn = document.getElementById('mobile-menu-btn');
    const closeMenuBtn = document.getElementById('close-menu-btn');
    const menuOverlay = document.getElementById('mobile-menu-overlay');
    const menuContent = menuOverlay.querySelector('.transform');
    const categoriesBtn = document.getElementById('mobile-categories-btn');
    const categoriesContent = document.getElementById('mobile-categories-content');

    // Mobile search functionality
    const mobileSearch = document.getElementById('mobile-search');
    const mobileSearchResults = document.getElementById('mobile-search-results');
    let searchTimeout;

    // Handle menu open/close
    menuBtn.addEventListener('click', () => {
      menuOverlay.classList.remove('hidden');
      setTimeout(() => {
        menuContent.classList.add('menu-slide-up');
      }, 10);
    });

    closeMenuBtn.addEventListener('click', closeMenu);

    function closeMenu() {
      menuContent.classList.remove('menu-slide-up');
      setTimeout(() => {
        menuOverlay.classList.add('hidden');
      }, 300);
    }

    // Handle categories expansion
    categoriesBtn.addEventListener('click', () => {
      const arrow = categoriesBtn.querySelector('svg');
      arrow.style.transform = categoriesContent.classList.contains('hidden') ?
        'rotate(180deg)' :
        'rotate(0)';
      categoriesContent.classList.toggle('hidden');
    });

    // Mobile search handling
    mobileSearch.addEventListener('input', () => {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(performMobileSearch, 300);
    });

    async function performMobileSearch() {
      const query = mobileSearch.value.trim();
      if (!query) {
        mobileSearchResults.classList.add('hidden');
        return;
      }

      try {
        const response = await fetch(`/search?q=${encodeURIComponent(query)}`);
        const data = await response.json();

        if (data.success) {
          displayMobileSearchResults(data.products, data.categories);
        }
      } catch (error) {
        console.error('Search error:', error);
      }
    }

    function displayMobileSearchResults(products, categories) {
      mobileSearchResults.innerHTML = '';

      if (products.length === 0 && categories.length === 0) {
        mobileSearchResults.innerHTML = `
        <div class="px-4 py-3 text-sm text-gray-700">
          No results found
        </div>
      `;
      } else {
        // Similar to desktop search results display but optimized for mobile
        // Add your results display logic here
      }

      mobileSearchResults.classList.remove('hidden');
    }

    // Close search results when clicking outside
    document.addEventListener('click', (e) => {
      if (!mobileSearch.contains(e.target) && !mobileSearchResults.contains(e.target)) {
        mobileSearchResults.classList.add('hidden');
      }
    });

    // Header scroll behavior
    let lastScroll = 0;
    const header = document.querySelector('header');

    window.addEventListener('scroll', () => {
      const currentScroll = window.pageYOffset;
      if (currentScroll > lastScroll && currentScroll > 50) {
        header.classList.add('header-hidden');
      } else {
        header.classList.remove('header-hidden');
      }
      lastScroll = currentScroll;
    }, {
      passive: true
    });

    // Update mobile badges
    async function updateMobileBadges() {
      try {
        const cartResponse = await fetch('/cart/count');
        const cartData = await cartResponse.json();
        const mobileBadge = document.getElementById('mobile-cart-badge');

        if (cartData.success && cartData.cartCount > 0) {
          mobileBadge.textContent = cartData.cartCount;
          mobileBadge.classList.add('badge-pop');
          mobileBadge.style.transform = 'scale(1)';
        }
      } catch (error) {
        console.error('Error updating mobile badges:', error);
      }
    }

    // Initialize badges
    updateMobileBadges();
  });


  // Large Screen

  document.addEventListener('DOMContentLoaded', function() {
    // Mobile functionality (already covered in the previous section)

    // Large screen functionality
    const categoryDropdownButton = document.getElementById('categoryDropdownButton');
    const categoryDropdown = document.getElementById('categoryDropdown');
    const categoryArrow = categoryDropdownButton.querySelector('.arrow');

    categoryDropdownButton.addEventListener('click', () => {
      categoryDropdown.classList.toggle('hidden');
      categoryArrow.classList.toggle('open');
    });

    document.addEventListener('click', (event) => {
      if (!categoryDropdownButton.contains(event.target) && !categoryDropdown.contains(event.target)) {
        categoryDropdown.classList.add('hidden');
        categoryArrow.classList.remove('open');
      }
    });

    // Top Bar Marquee Effect 
    document.addEventListener("DOMContentLoaded", function() {
      const marquee = document.getElementById("announcement-marquee");
      const announcements = marquee.children;
      let index = 0;
      const totalAnnouncements = announcements.length;

      function scrollAnnouncements() {
        // Move to the next announcement
        index = (index + 1) % totalAnnouncements;
        // Calculate the offset for smooth scrolling
        marquee.style.transform = `translateX(-${index * 100}%)`;
      }

      // Scroll every 3 seconds
      setInterval(scrollAnnouncements, 3000);
    });

    // Wishlist and Cart Badges
    async function updateBadges() {
      try {
        // Fetch wishlist count
        const wishlistResponse = await fetch('/wishlist/count');
        const wishlistData = await wishlistResponse.json();
        const wishlistBadge = document.getElementById('wishlist-count-badge');

        if (wishlistData.success && wishlistData.wishlistCount > 0) {
          wishlistBadge.textContent = wishlistData.wishlistCount;
          wishlistBadge.classList.add('badge-pop');
          wishlistBadge.style.transform = 'scale(1)';
        }

        // Fetch cart count
        const cartResponse = await fetch('/cart/count');
        const cartData = await cartResponse.json();
        const cartBadge = document.getElementById('cart-badge');

        if (cartData.success && cartData.cartCount > 0) {
          cartBadge.textContent = cartData.cartCount;
          cartBadge.classList.add('badge-pop');
          cartBadge.style.transform = 'scale(1)';
        }
      } catch (error) {
        console.error('Error updating badges:', error);
      }
    }

    // Search functionality
    const searchInput = document.getElementById('search-input');
    const searchResults = document.getElementById('search-results');
    let searchTimeout;
    searchResults.classList.add('max-h-[70vh]', 'overflow-y-auto', 'scrollbar-thin', 'scrollbar-thumb-gray-300', 'scrollbar-track-gray-100');

    searchInput.addEventListener('input', () => {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(performSearch, 300);
    });

    async function performSearch() {
      const query = searchInput.value.trim();
      if (!query) {
        searchResults.classList.add('hidden');
        return;
      }

      try {
        const response = await fetch(`/search?q=${encodeURIComponent(query)}`);
        const data = await response.json();

        if (data.success) {
          displaySearchResults(data.products, data.categories);
        }
      } catch (error) {
        console.error('Search error:', error);
      }
    }

    function displaySearchResults(products, categories) {
      searchResults.innerHTML = '';

      if (products.length === 0 && categories.length === 0) {
        searchResults.innerHTML = `
        <div class="px-4 py-3 text-sm text-gray-700">
          No results found
        </div>
      `;
      } else {
        // Categories section
        if (categories.length > 0) {
          searchResults.innerHTML += `
          <div class="px-4 py-2 text-xs font-semibold text-gray-500 bg-gray-50">
            Categories
          </div>
        `;
          categories.forEach(category => {
            searchResults.innerHTML += `
            <a href="/products/category/${category._id}" 
               class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50">
              ${category.name}
            </a>
          `;
          });
        }

        // Products section
        if (products.length > 0) {
          searchResults.innerHTML += `
          <div class="px-4 py-2 text-xs font-semibold text-gray-500 bg-gray-50">
            Products
          </div>
        `;
          products.forEach(product => {
            const formattedPrice = new Intl.NumberFormat('en-US', {
              style: 'currency',
              currency: 'INR'
            }).format(product.salePrice);

            searchResults.innerHTML += `
            <a href="/product-detail/${product._id}" 
               class="block px-4 py-2 hover:bg-gray-50 transition-colors duration-200">
              <div class="flex items-center space-x-3">
                <div class="flex-shrink-0">
                  <img src="${product.images[0]}" 
                       alt="${product.name}"
                       class="w-12 h-12 object-cover rounded-md border border-gray-200"
                       onerror="this.src='/images/placeholder.png'" />
                </div>
                <div class="flex-1 min-w-0">
                  <p class="text-sm font-medium text-gray-900 truncate">
                    ${product.name}
                  </p>
                  <p class="text-sm text-gray-500">
                    ${formattedPrice}
                  </p>
                  ${product.quantity > 0 ? `
                    <p class="text-xs text-green-600">In Stock</p>
                  ` : `
                    <p class="text-xs text-red-600">Out of Stock</p>
                  `}
                </div>
                <div class="flex-shrink-0 text-gray-400">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </div>
              </div>
            </a>
          `;
          });
        }
      }

      searchResults.classList.remove('hidden');
    }

    document.addEventListener('click', (e) => {
      if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
        searchResults.classList.add('hidden');
      }
    });

    // Initialize badges
    updateBadges();
  });

  function toggleSearchBar() {
    document.getElementById('yadro-logo').classList.toggle('hidden');
    document.getElementById('search-bar').classList.toggle('hidden');
    document.getElementById('search-results').classList.toggle('hidden');
    document.getElementById('main-header').classList.add('flex')
    document.getElementById('main-header').classList.add('justify-between')
    document.getElementById('search-button-logo').classList.toggle('hidden')
  }
</script>
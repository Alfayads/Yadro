<style>
  .dropdown {
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
  }

  .dropdown.hidden {
    opacity: 0;
    transform: translateY(-10px);
    pointer-events: none;
  }

  .arrow {
    transition: transform 0.3s ease-in-out;
  }

  .arrow.open {
    transform: rotate(180deg);
  }

  #wishlist-button {
    position: relative;
  }

  #wishlist-count-badge {
    position: absolute;
    top: -5px;
    right: -8px;
    background-color: #f56565;
    /* Tailwind red-500 */
    color: white;
    font-size: 0.75rem;
    /* Text size */
    font-weight: bold;
    padding: 0.1rem 0.1rem;
    border-radius: 9999px;
    min-width: 20px;
    /* Ensures consistent size */
    text-align: center;
  }
</style>

<header class="container mx-auto px-4 py-4 flex justify-around items-center border-b">
  <a href="/" class="text-2xl font-bold">Yadro</a>
  <nav>
    <ul class="flex space-x-6">
      <li><a href="/home" class="text-gray-600 hover:text-gray-900">Home</a></li>
      <li><a href="/contact" class="text-gray-600 hover:text-gray-900">Contact</a></li>
      <li><a href="/products" class="text-gray-600 hover:text-gray-900">Products</a></li>
      <li><a href="#category" class="text-gray-600 hover:text-gray-900">Categories</a></li>
    </ul>
  </nav>
  <div class="flex relative">
    <input type="email" placeholder="Search Your Products ...." class="footer-input" style="color: black; border-radius: 50px; width: 380px; padding-left: 10px; outline: none; border: 1px grey solid;">
    <i class="fa-solid fa-magnifying-glass absolute right-3 top-3"></i>
  </div>
  <div class="flex items-center space-x-4">
    <!-- Like button in the header -->
    <div class="relative">

      <a href="/wishlist" id="wishlist-button" class="relative">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-500 hover:text-red-600 transition duration-200" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z"></path>
        </svg>
        <!-- Count badge -->
        <span id="wishlist-count-badge" class="absolute top-0 right-0 bg-red-500 text-white text-xs font-bold px-1.5 py-0.5 rounded-full">0</span>
      </a>
    </div>
    <div class="relative">
      <a href="/cart" class="text-black hover:text-green-500 text-xl p-3 focus:outline-none focus:ring-2 focus:ring-green-300">
        <i class="fas fa-shopping-cart"></i>
      </a>
      <span class="absolute top-2 right-2 transform translate-x-1/2 -translate-y-1/2 h-4 w-4 bg-green-500 text-white text-xs font-bold rounded-full flex items-center justify-center">0</span>
    </div>
    <div class="relative">
      <button id="userDropdownButton" class="flex items-center space-x-2 focus:outline-none">
        <span class="text-sm font-medium text-gray-700"><%= user.fname %> <%= user.lname %></span>
        <div class="flex items-center space-x-1">
          <i class="fas fa-user text-black hover:text-blue-500 text-xl"></i>
          <i class="fas fa-chevron-down text-black text-xs arrow"></i>
        </div>
      </button>
      <div id="userDropdown" class="dropdown hidden absolute right-0 mt-2 w-48 bg-white rounded-md overflow-hidden shadow-xl z-10">
        <a href="/account" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Profile</a>
        <a href="/wallet" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Wallet</a>
        <a href="/orders" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">My Orders</a>
        <a href="/logout" class="block px-4 py-2 text-sm text-white bg-red-500 hover:bg-red-600">Log out</a>
      </div>
    </div>
  </div>
</header>

<script>
  const userDropdownButton = document.getElementById('userDropdownButton');
  const userDropdown = document.getElementById('userDropdown');
  const arrow = userDropdownButton.querySelector('.arrow');

  userDropdownButton.addEventListener('click', () => {
    userDropdown.classList.toggle('hidden');
    arrow.classList.toggle('open');
  });

  document.addEventListener('click', (event) => {
    if (!userDropdownButton.contains(event.target) && !userDropdown.contains(event.target)) {
      userDropdown.classList.add('hidden');
      arrow.classList.remove('open');
    }
  });


  // Wishlist
  document.addEventListener("DOMContentLoaded", function() {
    // Fetch the wishlist count from the backend when the DOM is ready
    fetch('/wishlist/count', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Update the wishlist count badge in the header
          document.getElementById('wishlist-count-badge').textContent = data.wishlistCount;
        } else {
          console.error('Error fetching wishlist count:', data.message);
        }
      })
      .catch(error => console.error('Error fetching wishlist count:', error));
  });
</script>
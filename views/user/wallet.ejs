<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Wallet - Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

    body {
      font-family: 'Inter', sans-serif;
      background-color: #f8fafc;
    }

    .glassmorphism {
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .profile-gradient {
      background: linear-gradient(135deg, #ff3e3e 0%, #ff6e6e 100%);
    }

    .transaction-card {
      transition: all 0.3s ease;
      transform: translateZ(0);
    }

    .transaction-card:hover {
      transform: translateY(-2px) translateZ(0);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }

    .balance-card {
      background: linear-gradient(135deg, #ff3e3e 0%, #ff6e6e 100%);
      transition: all 0.3s ease;
    }

    .balance-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }

    .stat-card {
      background: white;
      border-radius: 1rem;
      padding: 1.5rem;
      transition: all 0.3s ease;
    }

    .stat-card:hover {
      transform: translateY(-3px);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
    }

    @keyframes pulse {

      0%,
      100% {
        transform: scale(1);
      }

      50% {
        transform: scale(1.05);
      }
    }

    .animate-pulse-slow {
      animation: pulse 3s infinite;
    }


    /* Custom animations */
    .transaction-card {
      transition: transform 0.2s ease-in-out;
    }

    .transaction-card:hover {
      transform: translateX(4px);
    }

    /* Custom scrollbar for transaction list */
    .transaction-list::-webkit-scrollbar {
      width: 8px;
    }

    .transaction-list::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }

    .transaction-list::-webkit-scrollbar-thumb {
      background: #888;
      border-radius: 10px;
    }

    .transaction-list::-webkit-scrollbar-thumb:hover {
      background: #555;
    }

    /* Shimmer loading effect */
    @keyframes shimmer {
      0% {
        background-position: -1000px 0;
      }

      100% {
        background-position: 1000px 0;
      }
    }

    .loading-shimmer {
      animation: shimmer 2s infinite linear;
      background: linear-gradient(to right, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%);
      background-size: 1000px 100%;
    }
  </style>
</head>

<body class="min-h-screen">
  <%- include('../layouts/header-with-user.ejs') %>


  <main class="container mx-auto px-4 py-8 space-y-8 mt-16 mb-16">

    <div class="flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8">
      <div class="text-sm breadcrumbs mb-4 lg:mb-0">
        <ul class="flex flex-wrap items-center">
          <li><a href="/home" class="text-gray-500 hover:text-gray-700">Home</a></li>
          <li><i class="fas fa-chevron-right mx-2 text-gray-400 text-xs"></i></li>
          <li><a href="#" class="text-red-500 hover:text-red-700">Wallet</a></li>
        </ul>
      </div>
      <div class="text-gray-600 bg-white px-4 py-2 rounded-lg shadow-sm">
        Welcome! <span class="text-red-500 font-semibold" id="userName"><%= user.fname %> <%= user.lname %></span>
      </div>
    </div>


    <!-- Profile Section -->
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Left Column - Profile Card -->
      <div class="lg:w-1/3 space-y-6">
        <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
          <div class="profile-gradient p-6 text-center">
            <div class="w-32 h-32 mx-auto bg-white rounded-full p-2 shadow-lg">
              <div class="w-full h-full rounded-full bg-gray-200 flex items-center justify-center">
                <span class="text-4xl font-bold text-gray-600">
                  <%= user.fname[0] %><%= user.lname[0] %>
                </span>
              </div>
            </div>
            <h2 class="mt-4 text-2xl font-bold text-white"><%= user.fname %> <%= user.lname %></h2>
            <p class="text-white/80"><%= user.email %></p>
          </div>
          <div class="p-6 space-y-4">
            <div class="flex justify-between items-center">
              <span class="text-gray-600">Account Status</span>
              <span class="px-3 py-1 bg-green-100 text-green-600 rounded-full text-sm">Active</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-600">Member Since</span>
              <span class="text-gray-800">June 2023</span>
            </div>
            <div class="pt-4 border-t">
              <a href="account" class="w-full p-4 bg-red-600 text-white py-2 rounded-lg hover:bg-red-700 transition-colors">
                Edit Profile
              </a>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Column - Balance and Stats -->
      <div class="lg:w-2/3 space-y-6">
        <!-- Balance Card -->
        <div class="balance-card rounded-2xl p-6 text-white">
          <div class="flex justify-between items-start">
            <div>
              <h3 class="text-lg font-medium opacity-90">Total Balance</h3>
              <p class="text-4xl font-bold mt-2">₹<%= wallet.balance %></p>
            </div>
            <button onclick="refresh()" class="glassmorphism px-4 py-2 rounded-lg hover:bg-white/30 transition-colors">
              Refresh
            </button>
          </div>
          <div class="grid grid-cols-2 gap-4 mt-6">
            <button class="glassmorphism p-3 rounded-lg text-center hover:bg-white/30 transition-colors">
              <i class="fas fa-arrow-up mb-2"></i>
              <span class="block">Send Money</span>
            </button>
            <button class="glassmorphism p-3 rounded-lg text-center hover:bg-white/30 transition-colors">
              <i class="fas fa-arrow-down mb-2"></i>
              <span class="block">Receive Money</span>
            </button>
          </div>
        </div>

        <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4">
          <h3 class="text-xl font-bold text-gray-800">Recent Transactions</h3>
          <div class="flex gap-2 w-full md:w-auto">
            <div class="relative flex-grow md:flex-grow-0">
              <input type="text" id="searchTransaction" placeholder="Search transactions..." class="w-full px-4 py-2 text-sm bg-gray-50 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 border border-gray-200">
              <i class="fas fa-search absolute right-3 top-1/2 -translate-y-1/2 text-gray-400"></i>
            </div>
            <button id="filterBtn" class="px-4 py-2 text-sm bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors flex items-center gap-2">
              <i class="fas fa-filter"></i>
              <span class="hidden md:inline">Filter</span>
            </button>
            <button id="exportBtn" class="px-4 py-2 text-sm bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors flex items-center gap-2">
              <i class="fas fa-download"></i>
              <span class="hidden md:inline">Export</span>
            </button>
          </div>
        </div>

        <!-- Transactions List -->
        <div class="transaction-list space-y-4 max-h-[600px] overflow-y-auto">
          <% if(wallet.transactions && wallet.transactions.length > 0) { %>
          <% wallet.transactions.forEach((transaction, index) => { %>
          <div class="transaction-card flex items-center justify-between p-4 rounded-lg bg-gray-50 hover:bg-gray-100">
            <div class="flex items-center space-x-4">
              <div class="w-10 h-10 rounded-full flex items-center justify-center <%= transaction.type === 'credit' ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600' %>">
                <i class="fas <%= transaction.type === 'credit' ? 'fa-arrow-down' : 'fa-arrow-up' %>"></i>
              </div>
              <div class="flex-grow min-w-0">
                <p class="font-medium text-gray-900 truncate"><%= transaction.description %></p>
                <div class="flex items-center gap-2 text-sm text-gray-500">
                  <span><%= new Date(transaction.date).toLocaleDateString() %></span>
                  <span>•</span>
                  <span><%= transaction.time %></span>
                </div>
              </div>
            </div>
            <div class="text-right ml-4">
              <p class="font-medium whitespace-nowrap <%= transaction.type === 'credit' ? 'text-green-600' : 'text-red-600' %>">
                <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toLocaleString() %>
              </p>
              <p class="text-sm text-gray-500"><%= transaction.status %></p>
            </div>
          </div>
          <% }) %>
          <% } else { %>
          <div class="text-center py-12">
            <div class="w-24 h-24 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
              <i class="fas fa-receipt text-3xl text-gray-400"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900">No transactions yet</h3>
            <p class="text-gray-500 mt-2">Your transaction history will appear here</p>
          </div>
          <% } %>
        </div>

        <!-- Footer Section -->
        <div class="mt-6 flex justify-between items-center border-t pt-4">
          <p class="text-sm text-gray-500">
            Showing <span id="transactionCount">0</span> transactions
          </p>
          <a href="/wallet/history" class="text-red-600 hover:text-red-700 font-medium text-sm flex items-center gap-2">
            View All
            <i class="fas fa-arrow-right"></i>
          </a>
        </div>
      </div>
    </div>
    </div>
  </main>

  <%- include('../layouts/footer.ejs') %>

  <script>
    // Animate elements on page load
    document.addEventListener('DOMContentLoaded', () => {
      gsap.from(".balance-card", {
        y: 30,
        opacity: 0,
        duration: 0.8,
        ease: "power3.out"
      });

      gsap.from(".transaction-card", {
        y: 20,
        opacity: 0,
        duration: 0.5,
        stagger: 0.1,
        ease: "power2.out"
      });

      // Animate profile card
      gsap.from(".profile-gradient", {
        scale: 0.95,
        opacity: 0,
        duration: 1,
        ease: "elastic.out(1, 0.7)"
      });
    });

    // Refresh function
    function refresh() {
      window.location.reload();
    }

    // Add intersection observer for transaction cards
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = "1";
            entry.target.style.transform = "translateY(0)";
          }
        });
      }, {
        threshold: 0.1
      }
    );

    document.querySelectorAll('.transaction-card').forEach(card => {
      observer.observe(card);
    });


    document.addEventListener('DOMContentLoaded', function() {
      // Initialize variables
      const searchInput = document.getElementById('searchTransaction');
      const filterBtn = document.getElementById('filterBtn');
      const exportBtn = document.getElementById('exportBtn');
      const transactionCount = document.getElementById('transactionCount');
      const transactionCards = document.querySelectorAll('.transaction-card');

      // Update transaction count
      transactionCount.textContent = transactionCards.length;

      // Search functionality
      searchInput.addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();

        transactionCards.forEach(card => {
          const description = card.querySelector('.font-medium').textContent.toLowerCase();
          const amount = card.querySelector('.whitespace-nowrap').textContent;

          if (description.includes(searchTerm) || amount.includes(searchTerm)) {
            card.style.display = 'flex';
          } else {
            card.style.display = 'none';
          }
        });
      });

      // Filter button click handler
      filterBtn.addEventListener('click', function() {
        // Add your filter logic here
        alert('Filter functionality can be implemented based on your requirements');
      });

      // Export button click handler
      exportBtn.addEventListener('click', function() {
        // Add your export logic here
        alert('Export functionality can be implemented based on your requirements');
      });

      // Add loading state for transaction cards
      function addLoadingState(card) {
        card.classList.add('opacity-50');
        card.style.pointerEvents = 'none';
      }

      function removeLoadingState(card) {
        card.classList.remove('opacity-50');
        card.style.pointerEvents = 'auto';
      }

      // Example of using loading state (e.g., when fetching more transactions)
      function loadMoreTransactions() {
        transactionCards.forEach(addLoadingState);

        // Simulate loading delay
        setTimeout(() => {
          transactionCards.forEach(removeLoadingState);
        }, 1000);
      }

      // Optional: Implement infinite scroll
      const transactionList = document.querySelector('.transaction-list');
      let isLoading = false;

      transactionList.addEventListener('scroll', function() {
        if (isLoading) return;

        if (transactionList.scrollHeight - transactionList.scrollTop === transactionList.clientHeight) {
          isLoading = true;
          loadMoreTransactions();
          setTimeout(() => {
            isLoading = false;
          }, 1000);
        }
      });
    });
  </script>
</body>

</html>
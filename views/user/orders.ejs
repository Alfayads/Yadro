<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Yadro - All Orders</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="icon" href="/images/logo.png" type="image/x-icon">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
  <style>
    @keyframes shimmer {
      0% {
        background-position: -1000px 0;
      }

      100% {
        background-position: 1000px 0;
      }
    }

    .animate-shimmer {
      animation: shimmer 2s infinite linear;
      background: linear-gradient(to right, #f6f7f8 8%, #edeef1 18%, #f6f7f8 33%);
      background-size: 1000px 100%;
    }

    .order-item {
      opacity: 0;
      transform: translateY(20px);
    }

    @keyframes gradient {
      0% {
        background-position: 0% 50%;
      }

      50% {
        background-position: 100% 50%;
      }

      100% {
        background-position: 0% 50%;
      }
    }

    .gradient-bg {
      background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
      background-size: 400% 400%;
      animation: gradient 15s ease infinite;
    }

    /* Enhanced product display styles */
    .product-stack:hover {
      cursor: pointer;
    }

    .product-image {
      transition: transform 0.3s ease, z-index 0.3s ease;
    }

    .product-image:hover {
      transform: translateY(-4px) scale(1.05);
      z-index: 10;
    }

    .products-modal {
      backdrop-filter: blur(4px);
    }
  </style>

  <style>
    @keyframes float {
      0% {
        transform: translateY(0px);
      }

      50% {
        transform: translateY(-10px);
      }

      100% {
        transform: translateY(0px);
      }
    }

    .float-animation {
      animation: float 3s ease-in-out infinite;
    }

    .order-card {
      transition: all 0.3s ease;
      transform: translateY(0);
    }

    .order-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .status-pill {
      transition: all 0.3s ease;
    }

    .status-pill:hover {
      transform: scale(1.05);
    }

    .glass-effect {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
    }

    .gradient-border {
      position: relative;
      border: double 1px transparent;
      border-radius: 0.75rem;
      background-image: linear-gradient(white, white),
        linear-gradient(to right, #4F46E5, #818CF8);
      background-origin: border-box;
      background-clip: padding-box, border-box;
    }

    .scroll-shadow {
      background:
        linear-gradient(to right, white 30%, rgba(255, 255, 255, 0)),
        linear-gradient(to right, rgba(255, 255, 255, 0), white 70%) 100% 0,
        radial-gradient(farthest-side at 0 50%, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)),
        radial-gradient(farthest-side at 100% 50%, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)) 100% 0;
      background-repeat: no-repeat;
      background-size: 40px 100%, 40px 100%, 14px 100%, 14px 100%;
      background-attachment: local, local, scroll, scroll;
    }
  </style>
</head>

<body class="bg-gray-50 min-h-screen flex flex-col">
  <!-- Header -->
  <%- include('../layouts/header-with-user.ejs') %>

  <!-- Main Content -->
  <main class="container mx-auto px-4 mt-12 py-8">
    <!-- Page Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900">My Orders</h1>
      <p class="text-gray-600 mt-2">Track and manage your orders</p>
    </div>

    <!-- Quick Stats -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
      <div class="gradient-border p-6 bg-white">
        <div class="flex items-center">
          <div class="rounded-full p-3 bg-indigo-100">
            <i class="fas fa-shopping-bag text-indigo-600"></i>
          </div>
          <div class="ml-4">
            <h3 class="text-sm font-medium text-gray-500">Total Orders</h3>
            <p class="text-2xl font-bold text-gray-900"><%= orders.length %></p>
          </div>
        </div>
      </div>

      <div class="gradient-border p-6 bg-white">
        <div class="flex items-center">
          <div class="rounded-full p-3 bg-green-100">
            <i class="fas fa-check-circle text-green-600"></i>
          </div>
          <div class="ml-4">
            <h3 class="text-sm font-medium text-gray-500">Delivered</h3>
            <p class="text-2xl font-bold text-gray-900">
              <%= orders.filter(order => order.orderStatus === 'Delivered').length %>
            </p>
          </div>
        </div>
      </div>

      <div class="gradient-border p-6 bg-white">
        <div class="flex items-center">
          <div class="rounded-full p-3 bg-yellow-100">
            <i class="fas fa-clock text-yellow-600"></i>
          </div>
          <div class="ml-4">
            <h3 class="text-sm font-medium text-gray-500">In Progress</h3>
            <p class="text-2xl font-bold text-gray-900">
              <%= orders.filter(order => order.orderStatus === 'Placed').length %>
            </p>
          </div>
        </div>
      </div>

      <div class="gradient-border p-6 bg-white">
        <div class="flex items-center">
          <div class="rounded-full p-3 bg-red-100">
            <i class="fas fa-times-circle text-red-600"></i>
          </div>
          <div class="ml-4">
            <h3 class="text-sm font-medium text-gray-500">Cancelled</h3>
            <p class="text-2xl font-bold text-gray-900">
              <%= orders.filter(order => order.orderStatus === 'Cancelled').length %>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Orders List -->
    <div class="space-y-6">
      <% if (orders.length === 0) { %>
      <div class="text-center py-16">
        <img src="/images/forgotman.png" alt="No orders" class="w-48 h-48 mx-auto mb-6 float-animation">
        <h2 class="text-2xl font-bold text-gray-900 mb-2">No Orders Yet</h2>
        <p class="text-gray-600 mb-6">Start shopping and your orders will appear here</p>
        <a href="/products" class="inline-flex items-center px-6 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition duration-300">
          <i class="fas fa-shopping-cart mr-2"></i>
          Browse Products
        </a>
      </div>
      <% } else { %>
      <% orders.forEach((order, index) => { %>
      <div class="order-card gradient-border bg-white p-6">
        <!-- Order Header -->
        <div class="flex flex-wrap items-center justify-between mb-4">
          <div>
            <h3 class="text-lg font-semibold text-gray-900">
              Order #<%= order._id %>
            </h3>
            <p class="text-sm text-gray-500">
              <%= new Date(order.orderDate).toLocaleDateString('en-US', { 
                                    year: 'numeric', 
                                    month: 'long', 
                                    day: 'numeric',
                                    hour: '2-digit',
                                    minute: '2-digit'
                                }) %>
            </p>
          </div>
          <div class="flex items-center space-x-3">
            <span class="status-pill px-4 py-2 rounded-full text-sm font-medium
                                <%= order.orderStatus === 'Placed' ? 'bg-yellow-100 text-yellow-800' : 
                                   order.orderStatus === 'Delivered' ? 'bg-green-100 text-green-800' : 
                                   'bg-red-100 text-red-800' %>">
              <i class="fas fa-circle text-xs mr-2"></i>
              <%= order.orderStatus %>
            </span>
            <span class="status-pill px-4 py-2 rounded-full text-sm font-medium
                                <%= order.paymentStatus === 'Paid' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
              <i class="fas fa-<%= order.paymentStatus === 'Paid' ? 'check' : 'clock' %> mr-2"></i>
              <%= order.paymentStatus %>
            </span>
          </div>
        </div>

        <!-- Products Preview -->
        <div class="flex items-center space-x-4 mb-4">
          <div class="flex -space-x-3">
            <% order.items.slice(0, 3).forEach(item => { %>
            <div class="relative w-12 h-12 rounded-lg border-2 border-white shadow-sm overflow-hidden">
              <img src="<%= item.productId.images[0] %>" alt="<%= item.productId.name %>" class="w-full h-full object-cover" loading="lazy">
            </div>
            <% }) %>
            <% if (order.items.length > 3) { %>
            <div class="relative w-12 h-12 rounded-lg bg-gray-100 border-2 border-white shadow-sm flex items-center justify-center">
              <span class="text-sm font-medium text-gray-600">+<%= order.items.length - 3 %></span>
            </div>
            <% } %>
          </div>
          <div class="flex-1">
            <p class="text-sm font-medium text-gray-900">
              <%= order.items[0].productId.name %>
              <% if (order.items.length > 1) { %>
              <span class="text-gray-500">and <%= order.items.length - 1 %> more items</span>
              <% } %>
            </p>
          </div>
        </div>

        <!-- Order Details -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
          <div>
            <p class="text-sm text-gray-500">Total Amount</p>
            <p class="text-lg font-semibold text-gray-900">â‚¹<%= order.totalAmount %></p>
          </div>
          <div>
            <p class="text-sm text-gray-500">Items</p>
            <p class="text-lg font-semibold text-gray-900">
              <%= order.items.reduce((acc, item) => acc + item.quantity, 0) %>
            </p>
          </div>
          <div>
            <p class="text-sm text-gray-500">Discount</p>
            <p class="text-lg font-semibold text-green-600">
              -â‚¹<%= order.offerApplied || 0 %>
            </p>
          </div>
          <div>
            <p class="text-sm text-gray-500">Final Amount</p>
            <p class="text-lg font-semibold text-indigo-600">
              â‚¹<%= order.totalAmount - order.offerApplied %>
            </p>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex flex-wrap items-center gap-3">
          <a href="/order-tracking/<%= order._id %>" class="inline-flex items-center px-4 py-2 bg-indigo-50 text-indigo-700 rounded-lg hover:bg-indigo-100 transition duration-300">
            <i class="fas fa-map-marker-alt mr-2"></i>
            Track Order
          </a>

          <% if (order.orderStatus === "Delivered") { %>
          <a href="/order/invoice/<%= order._id %>" class="inline-flex items-center px-4 py-2 bg-green-50 text-green-700 rounded-lg hover:bg-green-100 transition duration-300">
            <i class="fas fa-download mr-2"></i>
            Download Invoice
          </a>
          <% } %>

          <% if (order.orderStatus !== "Cancelled" && order.orderStatus !== "Delivered" && order.orderStatus !== "Return Requested" && order.orderStatus !== "Return Approved" && order.orderStatus !== "Return Rejected") { %>
          <button onclick="openModal('<%= order._id %>')" class="inline-flex items-center px-4 py-2 bg-red-50 text-red-700 rounded-lg hover:bg-red-100 transition duration-300">
            <i class="fas fa-times mr-2"></i>
            Cancel Order
          </button>
          <% } %>

          <% if (order.orderStatus === "Delivered" && order.orderStatus !== "Return Requested") { %>
          <a href="/order/return/<%= order._id %>" class="inline-flex items-center px-4 py-2 bg-purple-50 text-purple-700 rounded-lg hover:bg-purple-100 transition duration-300">
            <i class="fas fa-undo mr-2"></i>
            Return Order
          </a>
          <% } %>
        </div>
      </div>
      <% }) %>
      <% } %>
    </div>
  </main>

  <!-- Cancellation Modal -->
  <div id="cancellationModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 invisible transition-opacity duration-300">
    <div class="bg-white rounded-lg shadow-2xl w-full max-w-md transform scale-95 transition-transform duration-300">
      <div class="gradient-bg h-2 rounded-t-lg"></div>
      <div class="p-6">
        <h3 class="text-2xl font-bold text-gray-900 mb-4">Cancel Your Order</h3>
        <p class="text-gray-600 mb-6">We're sorry to see you cancel. Please tell us why you're canceling so we can improve our service.</p>
        <select id="cancellationReason" class="w-full px-3 py-2 text-gray-700 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-300 mb-4">
          <option value="">Select a reason</option>
          <option value="Changed my mind">Changed my mind</option>
          <option value="Found a better price elsewhere">Found a better price elsewhere</option>
          <option value="Shipping time too long">Shipping time too long</option>
          <option value="Ordered by mistake">Ordered by mistake</option>
          <option value="Other">Other</option>
        </select>
        <textarea id="cancellationComment" class="w-full px-3 py-2 text-gray-700 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-300 mb-6" rows="4" placeholder="Additional comments (optional)"></textarea>
        <div class="flex justify-end space-x-4">
          <button id="cancelBtn" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition duration-300">
            Never Mind
          </button>
          <button id="confirmCancelBtn" class="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition duration-300">
            Confirm Cancellation
          </button>
        </div>
      </div>
    </div>
  </div>


  <!-- Footer -->
  <%- include('../layouts/footer.ejs') %>

  <script src="/js/loadingAnimation.js"></script>
  <script src="/js/successMessage.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Product cell click handler
      const productCells = document.querySelectorAll('.flex.-space-x-2');
      const modals = document.querySelectorAll('.products-modal');
      const closeButtons = document.querySelectorAll('.close-modal');

      productCells.forEach((cell, index) => {
        cell.addEventListener('click', () => {
          const modal = modals[index];
          modal.classList.remove('hidden');
          setTimeout(() => {
            modal.querySelector('.bg-white').style.transform = 'scale(1)';
            modal.querySelector('.bg-white').style.opacity = '1';
          }, 10);
        });
      });

      closeButtons.forEach(button => {
        button.addEventListener('click', (e) => {
          const modal = e.target.closest('.products-modal');
          const content = modal.querySelector('.bg-white');
          content.style.transform = 'scale(0.95)';
          content.style.opacity = '0';
          setTimeout(() => {
            modal.classList.add('hidden');
          }, 300);
        });
      });

      // Close modal when clicking outside
      modals.forEach(modal => {
        modal.addEventListener('click', (e) => {
          if (e.target === modal) {
            const content = modal.querySelector('.bg-white');
            content.style.transform = 'scale(0.95)';
            content.style.opacity = '0';
            setTimeout(() => {
              modal.classList.add('hidden');
            }, 300);
          }
        });
      });

      // Add hover animations for product images
      const productImages = document.querySelectorAll('.flex.-space-x-2 > div');
      productImages.forEach(image => {
        image.addEventListener('mouseenter', () => {
          gsap.to(image, {
            y: -4,
            duration: 0.2,
            ease: "power2.out"
          });
        });

        image.addEventListener('mouseleave', () => {
          gsap.to(image, {
            y: 0,
            duration: 0.2,
            ease: "power2.out"
          });
        });
      });
    });




    const badges = document.querySelectorAll('.status-badge');
    badges.forEach(badge => {
      badge.addEventListener('mouseover', () => {
        badge.style.transform = 'scale(1.05)';
        badge.style.transition = 'transform 0.2s ease';
      });

      badge.addEventListener('mouseout', () => {
        badge.style.transform = 'scale(1)';
      });
    });


    const modal = document.getElementById('cancellationModal');
    const modalContent = modal.querySelector('.bg-white');
    const cancelBtn = document.getElementById('cancelBtn');
    const confirmCancelBtn = document.getElementById('confirmCancelBtn');
    const reasonSelect = document.getElementById('cancellationReason');
    const commentTextarea = document.getElementById('cancellationComment');

    let currentOrderId; // Variable to store current order ID


    // Function to open modal
    function openModal(orderId) {
      currentOrderId = orderId;
      modal.classList.remove('invisible');
      gsap.to(modal, {
        opacity: 1,
        duration: 0.3,
        ease: "power2.out"
      });
      gsap.to(modalContent, {
        scale: 1,
        opacity: 1,
        duration: 0.3,
        ease: "back.out(1.7)"
      });
    }

    // Function to close modal
    function closeModal() {
      gsap.to(modalContent, {
        scale: 0.95,
        opacity: 0,
        duration: 0.2,
        ease: "power2.in"
      });
      gsap.to(modal, {
        opacity: 0,
        duration: 0.2,
        ease: "power2.in",
        onComplete: () => {
          modal.classList.add('invisible');
          reasonSelect.value = "";
          commentTextarea.value = "";
        }
      });
    }

    // Add event listeners
    document.addEventListener('DOMContentLoaded', () => {
      // Attach event listeners to all cancel order buttons
      document.querySelectorAll('#openModal').forEach(btn => {
        btn.addEventListener('click', (e) => {
          // Get the order ID from the closest tr element's data attribute
          const orderId = e.target.closest('tr').dataset.orderId;
          openModal(orderId);
          console.log("open model order id ==> ", orderId);
        });
      });

      // Cancel button event listener
      cancelBtn.addEventListener('click', closeModal);

      // Confirm cancellation button event listener
      confirmCancelBtn.addEventListener('click', () => {
        if (reasonSelect.value) {
          const reason = reasonSelect.value;
          const comments = commentTextarea.value;

          // Call the cancelOrder function with the current order ID and reason
          cancelOrder(currentOrderId, reason, comments);
        } else {
          // Shake animation for invalid selection
          gsap.to(reasonSelect, {
            x: [-10, 10, -10, 10, 0],
            duration: 0.5,
            ease: "power2.inOut"
          });
          reasonSelect.classList.add('ring-2', 'ring-red-500');
          setTimeout(() => reasonSelect.classList.remove('ring-2', 'ring-red-500'), 2000);
        }
      });

      // Close modal when clicking outside
      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          closeModal();
        }
      });
    });

    // Enhanced cancel order function
    function cancelOrder(orderId, reason, comments) {

      function getFormattedDateTime() {
        const now = new Date();
        const options = {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
          hour: 'numeric',
          minute: 'numeric',
          hour12: true
        };

        return now.toLocaleString('en-US', options);
      }
      const loadingOverlay = showLoadingAnimation();
      console.log('order cancel request ', orderId, reason, comments)
      fetch(`/order/cancel/${orderId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            reason: reason,
            comments: comments,
            cancelDate: getFormattedDateTime()
          })
        })
        .then(response => {
          hideLoadingAnimation(loadingOverlay);
          if (response.ok) {
            closeModal();
            showSuccessMessage({
              title: 'Order Cancelled !!',
              message: 'Your order has been cancelled successfully.',
              buttonText: 'Show Order Details',
              details: {
                'Order ID': orderId,
                'Reason': reason,
                'Comments': comments,
                'Date': getFormattedDateTime()
              },
              onButtonClick: () => {
                window.location.href = `/order-tracking/${orderId}`
              },
              autoClose: false // Close after 7 seconds
            });

            // Animate and remove the cancelled order row
            const cancelledRow = document.querySelector(`tr[data-order-id="${orderId}"]`);
            if (cancelledRow) {
              gsap.to(cancelledRow, {
                backgroundColor: '#FEE2E2',
                color: '#991B1B',
                duration: 0.5,
                ease: "power2.inOut",
                onComplete: () => {
                  setTimeout(() => {
                    gsap.to(cancelledRow, {
                      opacity: 0,
                      height: 0,
                      duration: 0.5,
                      ease: "power2.inOut",
                      onComplete: () => {
                        cancelledRow.remove();
                        // // Reload the page if needed
                        // location.reload();
                      }
                    });
                  }, 1000);
                }
              });
            }
          } else {
            throw new Error('Failed to cancel order');
          }
        })
        .catch(error => {
          hideLoadingAnimation(loadingOverlay);
          console.error("Error:", error);
          showErrorMessage('An error occurred. Please try again.');
        });
    }
  </script>
</body>

</html>
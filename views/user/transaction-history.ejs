<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Yadro - Transaction History</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

    body {
      font-family: 'Poppins', sans-serif;
      background-color: #F3F4F6;
    }

    .transaction-row {
      transition: all 0.3s ease;
    }

    .transaction-row:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
  </style>
</head>

<body class="bg-gray-100">
  <%- include('../layouts/header-with-user.ejs') %>

  <main class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-8">
      <div class="text-sm breadcrumbs">
        <ul class="flex">
          <li><a href="/home" class="text-gray-500">Home</a></li>
          <li><a href="/wallet" class="text-gray-500 ml-2">/ Wallet</a></li>
          <li class="text-red-500 font-semibold ml-2">/ Transaction History</li>
        </ul>
      </div>
      <div class="text-gray-600">Welcome! <span class="text-red-500 font-semibold" id="userName"><%= user.fname %> <%= user.lname %></span></div>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-6 mb-8">
      <h2 class="text-2xl font-bold mb-4">Transaction History</h2>

      <div class="mb-6 flex flex-wrap gap-4">
        <div class="flex-grow">
          <label for="search" class="block text-sm font-medium text-gray-700 mb-1">Search</label>
          <input type="text" id="search" class="w-full px-3 py-2 border border-gray-300 rounded-md" placeholder="Search transactions...">
        </div>
        <div>
          <label for="dateFrom" class="block text-sm font-medium text-gray-700 mb-1">From</label>
          <input type="date" id="dateFrom" class="w-full px-3 py-2 border border-gray-300 rounded-md">
        </div>
        <div>
          <label for="dateTo" class="block text-sm font-medium text-gray-700 mb-1">To</label>
          <input type="date" id="dateTo" class="w-full px-3 py-2 border border-gray-300 rounded-md">
        </div>
        <div>
          <label for="type" class="block text-sm font-medium text-gray-700 mb-1">Type</label>
          <select id="type" class="w-full px-3 py-2 border border-gray-300 rounded-md">
            <option value="">All</option>
            <option value="debit">Debit</option>
            <option value="credit">Credit</option>
          </select>
        </div>
      </div>

      <div class="overflow-x-auto">
        <table class="w-full">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Balance</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200" id="transactionBody">
            <!-- Transaction rows will be dynamically inserted here -->
          </tbody>
        </table>
      </div>

      <div class="mt-4 flex justify-between items-center">
        <div>
          <span class="text-sm text-gray-700">
            Showing <span class="font-medium">1</span> to <span class="font-medium">10</span> of <span class="font-medium">20</span> results
          </span>
        </div>
        <div>
          <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
            <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
              <span class="sr-only">Previous</span>
              <i class="fas fa-chevron-left"></i>
            </a>
            <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">1</a>
            <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">2</a>
            <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
              <span class="sr-only">Next</span>
              <i class="fas fa-chevron-right"></i>
            </a>
          </nav>
        </div>
      </div>
    </div>
  </main>

  <%- include('../layouts/footer.ejs') %>

  <script>
    // Sample transaction data
    const transactions = [{
        date: '2024-10-08',
        description: 'Grocery Store',
        type: 'debit',
        amount: -75.50,
        balance: 2424.50
      },
      {
        date: '2024-10-07',
        description: 'Salary Deposit',
        type: 'credit',
        amount: 3000.00,
        balance: 2500.00
      },
      {
        date: '2024-10-05',
        description: 'Electric Bill',
        type: 'debit',
        amount: -120.00,
        balance: -500.00
      },
      {
        date: '2024-10-03',
        description: 'Restaurant',
        type: 'debit',
        amount: -45.75,
        balance: -380.00
      },
      {
        date: '2024-10-01',
        description: 'Gas Station',
        type: 'debit',
        amount: -50.00,
        balance: -334.25
      },
    ];

    const transactionBody = document.getElementById('transactionBody');
    const searchInput = document.getElementById('search');
    const dateFromInput = document.getElementById('dateFrom');
    const dateToInput = document.getElementById('dateTo');
    const typeSelect = document.getElementById('type');

    function renderTransactions(filteredTransactions) {
      transactionBody.innerHTML = '';
      filteredTransactions.forEach(transaction => {
        const row = document.createElement('tr');
        row.className = 'transaction-row';
        row.innerHTML = `
          <td class="px-6 py-4 whitespace-nowrap">${transaction.date}</td>
          <td class="px-6 py-4 whitespace-nowrap">${transaction.description}</td>
          <td class="px-6 py-4 whitespace-nowrap">${transaction.type}</td>
          <td class="px-6 py-4 whitespace-nowrap ${transaction.amount >= 0 ? 'text-green-600' : 'text-red-600'}">${transaction.amount.toFixed(2)}</td>
          <td class="px-6 py-4 whitespace-nowrap">${transaction.balance.toFixed(2)}</td>
        `;
        transactionBody.appendChild(row);
      });
    }

    function filterTransactions() {
      const searchTerm = searchInput.value.toLowerCase();
      const dateFrom = dateFromInput.value;
      const dateTo = dateToInput.value;
      const type = typeSelect.value;

      const filteredTransactions = transactions.filter(transaction => {
        const matchesSearch = transaction.description.toLowerCase().includes(searchTerm);
        const matchesDateFrom = !dateFrom || transaction.date >= dateFrom;
        const matchesDateTo = !dateTo || transaction.date <= dateTo;
        const matchesType = !type || transaction.type === type;

        return matchesSearch && matchesDateFrom && matchesDateTo && matchesType;
      });

      renderTransactions(filteredTransactions);
    }

    searchInput.addEventListener('input', filterTransactions);
    dateFromInput.addEventListener('change', filterTransactions);
    dateToInput.addEventListener('change', filterTransactions);
    typeSelect.addEventListener('change', filterTransactions);

    // Initial render
    renderTransactions(transactions);

    // Animation for transaction rows
    gsap.from(".transaction-row", {
      opacity: 0,
      y: 20,
      stagger: 0.1,
      duration: 0.5,
      ease: "power2.out"
    });
  </script>
</body>

</html>